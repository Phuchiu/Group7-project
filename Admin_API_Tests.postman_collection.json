{
  "info": {
    "name": "Admin API Tests - Group 7",
    "description": "Test collection for Admin User Management APIs with RBAC",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userToken", 
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Admin Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('adminToken', response.token);",
              "    pm.test('Admin login successful', function () {",
              "        pm.expect(response.user.role).to.equal('admin');",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"123456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "2. User Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('userToken', response.token);",
              "    pm.test('User login successful', function () {",
              "        pm.expect(response.user.role).to.equal('user');",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"123456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "3. GET Users - Admin Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Response has users list', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('users');",
              "    pm.expect(response).to.have.property('count');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      }
    },
    {
      "name": "4. GET Users - User Forbidden",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 403', function () {",
              "    pm.response.to.have.status(403);",
              "});",
              "",
              "pm.test('Access denied message', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response.message).to.include('admin');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{userToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      }
    },
    {
      "name": "5. GET User Stats - Admin",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Stats data present', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response).to.have.property('totalUsers');",
              "    pm.expect(response).to.have.property('adminCount');",
              "    pm.expect(response).to.have.property('userCount');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/users/stats",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "stats"]
        }
      }
    },
    {
      "name": "6. DELETE User - Admin Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test('Delete successful', function () {",
              "    const response = pm.response.json();",
              "    pm.expect(response.message).to.include('xóa');",
              "    pm.expect(response.message).to.include('thành công');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/users/USER_ID_TO_DELETE",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "USER_ID_TO_DELETE"]
        }
      }
    }
  ]
}